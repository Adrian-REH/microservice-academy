plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'service.demo.store'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = "14"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.7.4")
	set('springCloudVersion', "2021.0.8")
}

dependencies {
	implementation 'org.modelmapper:modelmapper:2.3.8'

	implementation 'org.springframework.cloud:spring-cloud-netflix-hystrix-dashboard:2.2.2.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.2.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//Para ver todos los path del servicio
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//Usado para la base de datos sql
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//Para la web service
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//Para configurar el servicio y usar bootstrap
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation('org.springframework.cloud:spring-cloud-starter-bootstrap')
	//Para descubrir el servicio y ver su consumo entre otro
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    //facilita el uso de clases de datos
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//Para gestionarlo desde admin server
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	//Para el id de la transaccion por logs entre comunicacion de microservicios
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	//Driver para postgreSQL
	runtimeOnly 'org.postgresql:postgresql'
	//Driver para postgreSQL
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//Para validar que no sea null, blank entre otros
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//...
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	testImplementation 'junit:junit:4.13.1'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
targetCompatibility = JavaVersion.VERSION_14
